#coding=utf-8
"""
Django settings for pro_test01 project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'patdhsy3j+5$o5!tlou)cp(vpu$2)5#x&h5ud+$$h^b3x!zhg@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['*']#正式上线改成具体项目的域名(可以访问的主机的host)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'project_test01',
    'blog',
    'ckeditor',
    'ckeditor_uploader',
    'haystack',
    'rest_framework'
]


from  django.middleware.csrf import CsrfViewMiddleware

MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',#django自动全栈缓存
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'mymiddleware.my.Mid1',
    # 'mymiddleware.my.Mid2',
    # 'mymiddleware.my.Mid3',
    'django.middleware.cache.FetchFromCacheMiddleware',

]

ROOT_URLCONF = 'pro_test01.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'project_test01.my_context_prosessors.getData',
                'blog.context.getRightInfo'
            ],
        },
    },
]

WSGI_APPLICATION = 'pro_test01.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
    # 'default': {
    #         'ENGINE': 'django.db.backends.mysql',
    #         'NAME': 'mes_dev',
    #         'HOST':'10.53.4.20',
    #         'PORT':3307,
    #         'USER':'lt_mes_dev_rw_te',
    #         'PASSWORD':'h80TLA0uFfXhJ1fS'
    #     }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/ShangHai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'#地址栏中8000后面的路径
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static\images'),
    os.path.join(BASE_DIR,'static\js'),
    os.path.join(BASE_DIR,'static\css'),
]#文件存储位置

from django.conf import global_settings
# global_settings
#指定文件上传目录(绝对路径。存储用)
MEDIA_ROOT = os.path.join(BASE_DIR,'media')
#指定上传文件的存储路径（相对路径,读取用）
MEDIA_URL = '/media/'
#指定后台上传文件的目录
CKEDITOR_UPLOAD_PATH = 'upload/'

#缓存配置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    },
    'redis':{
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION':'redis://127.0.0.1:6379/0',
    }
}
CACHE_MIDDLEWARE_KEY_PREFIX = ''
CACHE_MIDDLEWARE_SECONDS = 600
CACHE_MIDDLEWARE_ALIAS = 'redis'

#指定生成的搜索引擎路径
HAYSTACK_CONNECTIONS = {
    # 'default':{
    #     'ENGINE':'haystack.backends.whoosh_backend.WhooshEngine',
    #     'PATH':os.path.join(BASE_DIR,'whoosh_index'),
    # },
    'default':{
        'ENGINE':'blog.whoosh_cn_backend.WhooshEngine', #引用中文分词搜索
        'PATH':os.path.join(BASE_DIR,'whoosh_index'),
    },
}
#实时生成索引文件--新添加的也会生成索引文件
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'